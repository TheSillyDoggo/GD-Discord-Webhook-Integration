name: Build Geode Mod

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: Windows
          os: windows-latest
          
        - name: macOS
          os: macos-latest

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          
      - name: Build the mod
        uses: geode-sdk/build-geode-mod@main
        with:
          combine: true
      
  package:
    name: Package builds
    runs-on: ubuntu-latest
    needs: ['build']

    steps:
      - uses: geode-sdk/build-geode-mod@combine
        id: build

      - uses: actions/upload-artifact@v3
        with:
          name: GD-Discord-Webhook-Integration Build Output
          path: ${{ steps.build.outputs.build-output }}

      - name: GH Release
        # You may pin to the exact commit or the version.
        # uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        uses: softprops/action-gh-release@v0.1.15
        with:
          # Note-worthy description of changes in release
          body: # optional
          # Path to load note-worthy description of changes in release from
          body_path: # optional
          # Gives the release a custom name. Defaults to tag name
          name: # optional
          # Gives a tag name. Defaults to github.GITHUB_REF
          tag_name: # optional
          # Creates a draft release. Defaults to false
          draft: # optional
          # Identify the release as a prerelease. Defaults to false
          prerelease: # optional
          # Newline-delimited list of path globs for asset files to upload
          files: # optional
          # Fails if any of the `files` globs match nothing. Defaults to false
          fail_on_unmatched_files: # optional
          # Repository to make releases against, in <owner>/<repo> format
          repository: # optional
          # Authorized secret GitHub Personal Access Token. Defaults to github.token
          token: # optional, default is ${{ github.token }}
          # Commitish value that determines where the Git tag is created from. Can be any branch or commit SHA.
          target_commitish: # optional
          # If specified, a discussion of the specified category is created and linked to the release. The value must be a category that already exists in the repository. If there is already a discussion linked to the release, this parameter is ignored.
          discussion_category_name: # optional
          # Whether to automatically generate the name and body for this release. If name is specified, the specified name will be used; otherwise, a name will be automatically generated. If body is specified, the body will be pre-pended to the automatically generated notes.
          generate_release_notes: # optional
          # Append to existing body instead of overwriting it. Default is false.
          append_body: # optional
